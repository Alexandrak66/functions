kind: job
metadata:
  name: arc-to-parquet
  tag: ''
  hash: 230a55892607ea860759886068ebd7e17c1811da
  project: ''
  labels:
    author: yjb
    stage: development
  categories:
  - fileutils
  - compression
spec:
  command: ''
  args: []
  image: mlrun/ml-base:0.4.6
  env: []
  default_handler: arc_to_parquet
  entry_points:
    arc_to_parquet:
      name: arc_to_parquet
      doc: 'Open a file/object archive and save as a parquet file.


        Partitioning requires precise specification of column types.'
      parameters:
      - name: context
        type: MLClientCtx
        doc: function context
      - name: archive_url
        type: Union[str, DataItem]
        doc: any valid string path consistent with the path variable of pandas.read_csv,
          including strings as file paths, as urls,  pathlib.Path objects, etc...
      - name: header
        type: Optional[List[str]]
        doc: column names
      - name: chunksize
        type: int
        doc: (0) row size retrieved per iteration
        default: 10000
      - name: dtype
      - name: encoding
        type: str
        default: latin-1
      - name: key
        type: str
        doc: key in artifact store (when log_data=True)
        default: data
      - name: dataset
        type: Optional[str]
        doc: (None) if not None then "target_path/dataset" is folder for partitioned
          files
      - name: part_cols
        doc: ([]) list of partitioning columns
      - name: file_ext
        type: str
        doc: (pqt) parquet file extension
        default: pqt
      outputs: []
      lineno: 27
  description: ''
  image_pull_policy: Always
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlciBvbiAyMDIwLTAzLTIzIDE0OjU3CgoKaW1wb3J0IHNzbAoKdHJ5OgogICAgX2NyZWF0ZV91bnZlcmlmaWVkX2h0dHBzX2NvbnRleHQgPSBzc2wuX2NyZWF0ZV91bnZlcmlmaWVkX2NvbnRleHQKZXhjZXB0IEF0dHJpYnV0ZUVycm9yOgogICAgICAgIHBhc3MKZWxzZToKICAgIHNzbC5fY3JlYXRlX2RlZmF1bHRfaHR0cHNfY29udGV4dCA9IF9jcmVhdGVfdW52ZXJpZmllZF9odHRwc19jb250ZXh0CgppbXBvcnQgb3MKaW1wb3J0IGpzb24KaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IHB5YXJyb3cucGFycXVldCBhcyBwcQppbXBvcnQgcHlhcnJvdyBhcyBwYQpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wLCBsb2FkCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKCmZyb20gdHlwaW5nIGltcG9ydCBJTywgQW55U3RyLCBVbmlvbiwgTGlzdCwgT3B0aW9uYWwKCmRlZiBhcmNfdG9fcGFycXVldCgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LAogICAgYXJjaGl2ZV91cmw6IFVuaW9uW3N0ciwgRGF0YUl0ZW1dLAogICAgaGVhZGVyOiBPcHRpb25hbFtMaXN0W3N0cl1dID0gTm9uZSwKICAgIGNodW5rc2l6ZTogaW50ID0gMTBfMDAwLAogICAgZHR5cGU9Tm9uZSwKICAgIGVuY29kaW5nOiBzdHIgPSAibGF0aW4tMSIsCiAgICBrZXk6IHN0ciA9ICJkYXRhIiwKICAgIGRhdGFzZXQ6IE9wdGlvbmFsW3N0cl0gPSBOb25lLAogICAgcGFydF9jb2xzID0gW10sCiAgICBmaWxlX2V4dDogc3RyID0gJ3BxdCcKKSAtPiBOb25lOgogICAgIiIiT3BlbiBhIGZpbGUvb2JqZWN0IGFyY2hpdmUgYW5kIHNhdmUgYXMgYSBwYXJxdWV0IGZpbGUuCgogICAgUGFydGl0aW9uaW5nIHJlcXVpcmVzIHByZWNpc2Ugc3BlY2lmaWNhdGlvbiBvZiBjb2x1bW4gdHlwZXMuCgogICAgOnBhcmFtIGNvbnRleHQ6ICAgICAgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIGFyY2hpdmVfdXJsOiAgYW55IHZhbGlkIHN0cmluZyBwYXRoIGNvbnNpc3RlbnQgd2l0aCB0aGUgcGF0aCB2YXJpYWJsZQogICAgICAgICAgICAgICAgICAgICAgICAgb2YgcGFuZGFzLnJlYWRfY3N2LCBpbmNsdWRpbmcgc3RyaW5ncyBhcyBmaWxlIHBhdGhzLCBhcyB1cmxzLCAKICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhsaWIuUGF0aCBvYmplY3RzLCBldGMuLi4KICAgIDpwYXJhbSBoZWFkZXI6ICAgICAgIGNvbHVtbiBuYW1lcwogICAgOnBhcmFtIGNodW5rc2l6ZTogICAgKDApIHJvdyBzaXplIHJldHJpZXZlZCBwZXIgaXRlcmF0aW9uCiAgICA6cGFyYW0gZHR5cGUgICAgICAgICBkZXN0aW5hdGlvbiBkYXRhIHR5cGUgb2Ygc3BlY2lmaWVkIGNvbHVtbnMKICAgIDpwYXJhbSBlbmNvZGluZyAgICAgICgibGF0aW4tOCIpIGZpbGUgZW5jb2RpbmcKICAgIDpwYXJhbSBrZXk6ICAgICAgICAgIGtleSBpbiBhcnRpZmFjdCBzdG9yZSAod2hlbiBsb2dfZGF0YT1UcnVlKQogICAgOnBhcmFtIGRhdGFzZXQ6ICAgICAgKE5vbmUpIGlmIG5vdCBOb25lIHRoZW4gInRhcmdldF9wYXRoL2RhdGFzZXQiCiAgICAgICAgICAgICAgICAgICAgICAgICBpcyBmb2xkZXIgZm9yIHBhcnRpdGlvbmVkIGZpbGVzCiAgICA6cGFyYW0gZmlsZV9leHQ6ICAgICAocHF0KSBwYXJxdWV0IGZpbGUgZXh0ZW5zaW9uCiAgICA6cGFyYW0gcGFydF9jb2xzOiAgICAoW10pIGxpc3Qgb2YgcGFydGl0aW9uaW5nIGNvbHVtbnMKCiAgICAiIiIKICAgIGJhc2VfcGF0aCA9IGNvbnRleHQuYXJ0aWZhY3RfcGF0aAogICAgb3MubWFrZWRpcnMoYmFzZV9wYXRoLCBleGlzdF9vaz1UcnVlKQoKICAgIGlmIGRhdGFzZXQgaXMgbm90IE5vbmU6CiAgICAgICAgZGVzdF9wYXRoID0gb3MucGF0aC5qb2luKGJhc2VfcGF0aCwgZGF0YXNldCkKICAgICAgICBleGlzdHMgPSBvcy5wYXRoLmlzZGlyKGRlc3RfcGF0aCkKICAgIGVsc2U6CiAgICAgICAgZGVzdF9wYXRoID0gb3MucGF0aC5qb2luKGJhc2VfcGF0aCwga2V5K2YiLntmaWxlX2V4dH0iKQogICAgICAgIGV4aXN0cyA9IG9zLnBhdGguaXNmaWxlKGRlc3RfcGF0aCkKCiAgICBpZiBub3QgZXhpc3RzOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oImRlc3RpbmF0aW9uIGZpbGUgZG9lcyBub3QgZXhpc3QsIGRvd25sb2FkaW5nIikKICAgICAgICBwcXdyaXRlciA9IE5vbmUKICAgICAgICBmb3IgaSwgZGYgaW4gZW51bWVyYXRlKHBkLnJlYWRfY3N2KGFyY2hpdmVfdXJsLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNodW5rc2l6ZT1jaHVua3NpemUsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZXM9aGVhZGVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2Rpbmc9ZW5jb2RpbmcsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHR5cGU9ZHR5cGUpKToKICAgICAgICAgICAgdGFibGUgPSBwYS5UYWJsZS5mcm9tX3BhbmRhcyhkZikKICAgICAgICAgICAgaWYgaSA9PSAwOgogICAgICAgICAgICAgICAgaWYgZGF0YXNldDoKICAgICAgICAgICAgICAgICAgICBwcS5QYXJxdWV0V3JpdGVyKG9zLnBhdGguam9pbihiYXNlX3BhdGgsImhlYWRlci1vbmx5LnBxdCIpLCB0YWJsZS5zY2hlbWEpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHBxd3JpdGVyID0gcHEuUGFycXVldFdyaXRlcihkZXN0X3BhdGgsIHRhYmxlLnNjaGVtYSkKICAgICAgICAgICAgICAgIGNvbnRleHQubG9nX2FydGlmYWN0KCJoZWFkZXIiLCBsb2NhbF9wYXRoPSJoZWFkZXItb25seS5wcXQiKQogICAgICAgICAgICBpZiBkYXRhc2V0OgogICAgICAgICAgICAgICAgcHEud3JpdGVfdG9fZGF0YXNldCh0YWJsZSwgcm9vdF9wYXRoPWRlc3RfcGF0aCwgcGFydGl0aW9uX2NvbHM9cGFydGl0aW9uX2NvbHMpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcXdyaXRlci53cml0ZV90YWJsZSh0YWJsZSkKICAgICAgICBpZiBwcXdyaXRlcjoKICAgICAgICAgICAgcHF3cml0ZXIuY2xvc2UoKQoKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYic2F2ZWQgdGFibGUgdG8ge2Rlc3RfcGF0aH0iKQogICAgZWxzZToKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKCJkZXN0aW5hdGlvbiBmaWxlIGFscmVhZHkgZXhpc3RzIikKICAgIGNvbnRleHQubG9nX2FydGlmYWN0KGtleSwgbG9jYWxfcGF0aD1rZXkrIi5wcXQiKQoK
    commands: []
    code_origin: /User/functions/arc_to_parquet/function.yaml
