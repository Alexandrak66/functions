kind: job
metadata:
  name: arc-to-parquet
  tag: latest
  hash: 9ec0eb3627948e608c125cabce7862206d04200a
  project: ''
  labels:
    author: yjb
  categories:
  - fileutils
  - retrieve
spec:
  command: ''
  args: []
  image: mlrun/ml-base
  env: []
  default_handler: arc_to_parquet
  entry_points:
    arc_to_parquet:
      name: arc_to_parquet
      doc: 'Open a file/object archive and save as a parquet file.


        Partitioning requires precise specification of column types.'
      parameters:
      - name: context
        type: MLClientCtx
        doc: function context
      - name: archive_url
        type: str
        doc: any valid string path consistent with the path variable of pandas.read_csv,
          including strings as file paths, as urls,  pathlib.Path objects, etc...
      - name: header
        type: Optional[List[str]]
        doc: column names
      - name: chunksize
        type: int
        doc: (0) row size retrieved per iteration
        default: 10000
      - name: dtype
      - name: encoding
        type: str
        default: latin-1
      - name: key
        type: str
        doc: key in artifact store (when log_data=True)
        default: data
      - name: dataset
        type: Optional[str]
        doc: (None) if not None then "target_path/dataset" is folder for partitioned
          files
      - name: part_cols
        doc: ([]) list of partitioning columns
      - name: file_ext
        type: str
        doc: (parquet) csv/parquet file extension
        default: parquet
      outputs: []
      lineno: 27
  description: retrieve remote archive, open and save as parquet
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlciBvbiAyMDIwLTA0LTAyIDE2OjU4CgoKaW1wb3J0IHNzbAoKdHJ5OgogICAgX2NyZWF0ZV91bnZlcmlmaWVkX2h0dHBzX2NvbnRleHQgPSBzc2wuX2NyZWF0ZV91bnZlcmlmaWVkX2NvbnRleHQKZXhjZXB0IEF0dHJpYnV0ZUVycm9yOgogICAgICAgIHBhc3MKZWxzZToKICAgIHNzbC5fY3JlYXRlX2RlZmF1bHRfaHR0cHNfY29udGV4dCA9IF9jcmVhdGVfdW52ZXJpZmllZF9odHRwc19jb250ZXh0CgppbXBvcnQgb3MKaW1wb3J0IGpzb24KaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IHB5YXJyb3cucGFycXVldCBhcyBwcQppbXBvcnQgcHlhcnJvdyBhcyBwYQpmcm9tIGNsb3VkcGlja2xlIGltcG9ydCBkdW1wLCBsb2FkCgpmcm9tIG1scnVuLmV4ZWN1dGlvbiBpbXBvcnQgTUxDbGllbnRDdHgKZnJvbSBtbHJ1bi5kYXRhc3RvcmUgaW1wb3J0IERhdGFJdGVtCmZyb20gbWxydW4uYXJ0aWZhY3RzIGltcG9ydCBQbG90QXJ0aWZhY3QsIFRhYmxlQXJ0aWZhY3QKCmZyb20gdHlwaW5nIGltcG9ydCBJTywgQW55U3RyLCBVbmlvbiwgTGlzdCwgT3B0aW9uYWwKCmRlZiBhcmNfdG9fcGFycXVldCgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LAogICAgYXJjaGl2ZV91cmw6IHN0ciwKICAgIGhlYWRlcjogT3B0aW9uYWxbTGlzdFtzdHJdXSA9IE5vbmUsCiAgICBjaHVua3NpemU6IGludCA9IDEwXzAwMCwKICAgIGR0eXBlPU5vbmUsCiAgICBlbmNvZGluZzogc3RyID0gImxhdGluLTEiLAogICAga2V5OiBzdHIgPSAiZGF0YSIsCiAgICBkYXRhc2V0OiBPcHRpb25hbFtzdHJdID0gTm9uZSwKICAgIHBhcnRfY29scyA9IFtdLAogICAgZmlsZV9leHQ6IHN0ciA9ICdwYXJxdWV0JwopIC0+IE5vbmU6CiAgICAiIiJPcGVuIGEgZmlsZS9vYmplY3QgYXJjaGl2ZSBhbmQgc2F2ZSBhcyBhIHBhcnF1ZXQgZmlsZS4KCiAgICBQYXJ0aXRpb25pbmcgcmVxdWlyZXMgcHJlY2lzZSBzcGVjaWZpY2F0aW9uIG9mIGNvbHVtbiB0eXBlcy4KCiAgICA6cGFyYW0gY29udGV4dDogICAgICBmdW5jdGlvbiBjb250ZXh0CiAgICA6cGFyYW0gYXJjaGl2ZV91cmw6ICBhbnkgdmFsaWQgc3RyaW5nIHBhdGggY29uc2lzdGVudCB3aXRoIHRoZSBwYXRoIHZhcmlhYmxlCiAgICAgICAgICAgICAgICAgICAgICAgICBvZiBwYW5kYXMucmVhZF9jc3YsIGluY2x1ZGluZyBzdHJpbmdzIGFzIGZpbGUgcGF0aHMsIGFzIHVybHMsIAogICAgICAgICAgICAgICAgICAgICAgICAgcGF0aGxpYi5QYXRoIG9iamVjdHMsIGV0Yy4uLgogICAgOnBhcmFtIGhlYWRlcjogICAgICAgY29sdW1uIG5hbWVzCiAgICA6cGFyYW0gY2h1bmtzaXplOiAgICAoMCkgcm93IHNpemUgcmV0cmlldmVkIHBlciBpdGVyYXRpb24KICAgIDpwYXJhbSBkdHlwZSAgICAgICAgIGRlc3RpbmF0aW9uIGRhdGEgdHlwZSBvZiBzcGVjaWZpZWQgY29sdW1ucwogICAgOnBhcmFtIGVuY29kaW5nICAgICAgKCJsYXRpbi04IikgZmlsZSBlbmNvZGluZwogICAgOnBhcmFtIGtleTogICAgICAgICAga2V5IGluIGFydGlmYWN0IHN0b3JlICh3aGVuIGxvZ19kYXRhPVRydWUpCiAgICA6cGFyYW0gZGF0YXNldDogICAgICAoTm9uZSkgaWYgbm90IE5vbmUgdGhlbiAidGFyZ2V0X3BhdGgvZGF0YXNldCIKICAgICAgICAgICAgICAgICAgICAgICAgIGlzIGZvbGRlciBmb3IgcGFydGl0aW9uZWQgZmlsZXMKICAgIDpwYXJhbSBmaWxlX2V4dDogICAgIChwYXJxdWV0KSBjc3YvcGFycXVldCBmaWxlIGV4dGVuc2lvbgogICAgOnBhcmFtIHBhcnRfY29sczogICAgKFtdKSBsaXN0IG9mIHBhcnRpdGlvbmluZyBjb2x1bW5zCgogICAgIiIiCiAgICBiYXNlX3BhdGggPSBjb250ZXh0LmFydGlmYWN0X3BhdGgKICAgIG9zLm1ha2VkaXJzKGJhc2VfcGF0aCwgZXhpc3Rfb2s9VHJ1ZSkKICAgIAogICAgYXJjaGl2ZV91cmwgPSBzdHIoYXJjaGl2ZV91cmwpCiAgICAKICAgIGlmIGRhdGFzZXQgaXMgbm90IE5vbmU6CiAgICAgICAgZGVzdF9wYXRoID0gb3MucGF0aC5qb2luKGJhc2VfcGF0aCwgZGF0YXNldCkKICAgICAgICBleGlzdHMgPSBvcy5wYXRoLmlzZGlyKGRlc3RfcGF0aCkKICAgIGVsc2U6CiAgICAgICAgZGVzdF9wYXRoID0gb3MucGF0aC5qb2luKGJhc2VfcGF0aCwga2V5K2YiLntmaWxlX2V4dH0iKQogICAgICAgIGV4aXN0cyA9IG9zLnBhdGguaXNmaWxlKGRlc3RfcGF0aCkKCiAgICBpZiBub3QgZXhpc3RzOgogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oImRlc3RpbmF0aW9uIGZpbGUgZG9lcyBub3QgZXhpc3QsIGRvd25sb2FkaW5nIikKICAgICAgICBwcXdyaXRlciA9IE5vbmUKICAgICAgICBmb3IgaSwgZGYgaW4gZW51bWVyYXRlKHBkLnJlYWRfY3N2KGFyY2hpdmVfdXJsLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNodW5rc2l6ZT1jaHVua3NpemUsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZXM9aGVhZGVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2Rpbmc9ZW5jb2RpbmcsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHR5cGU9ZHR5cGUpKToKICAgICAgICAgICAgdGFibGUgPSBwYS5UYWJsZS5mcm9tX3BhbmRhcyhkZikKICAgICAgICAgICAgaWYgaSA9PSAwOgogICAgICAgICAgICAgICAgaWYgZGF0YXNldDoKICAgICAgICAgICAgICAgICAgICBwcS5QYXJxdWV0V3JpdGVyKG9zLnBhdGguam9pbihiYXNlX3BhdGgsZiJoZWFkZXItb25seS57ZmlsZV9leHR9IiksIHRhYmxlLnNjaGVtYSkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcHF3cml0ZXIgPSBwcS5QYXJxdWV0V3JpdGVyKGRlc3RfcGF0aCwgdGFibGUuc2NoZW1hKQogICAgICAgICAgICAgICAgY29udGV4dC5sb2dfYXJ0aWZhY3QoImhlYWRlciIsIGxvY2FsX3BhdGg9ZiJoZWFkZXItb25seS57ZmlsZV9leHR9IikKICAgICAgICAgICAgaWYgZGF0YXNldDoKICAgICAgICAgICAgICAgIHBxLndyaXRlX3RvX2RhdGFzZXQodGFibGUsIHJvb3RfcGF0aD1kZXN0X3BhdGgsIHBhcnRpdGlvbl9jb2xzPXBhcnRpdGlvbl9jb2xzKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHF3cml0ZXIud3JpdGVfdGFibGUodGFibGUpCiAgICAgICAgaWYgcHF3cml0ZXI6CiAgICAgICAgICAgIHBxd3JpdGVyLmNsb3NlKCkKCiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmInNhdmVkIHRhYmxlIHRvIHtkZXN0X3BhdGh9IikKICAgIGVsc2U6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbygiZGVzdGluYXRpb24gZmlsZSBhbHJlYWR5IGV4aXN0cyIpCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdChrZXksIGxvY2FsX3BhdGg9a2V5K2YiLntmaWxlX2V4dH0iKQoK
    commands: []
    code_origin: https://github.com/yjb-ds/functions.git#4efffcc0e44e95cd0ec2b2a95cb031815df4fe25:arc_to_parquet.ipynb
