kind: job
metadata:
  name: test-classifier
  tag: ''
  hash: a82a177b7ca74510ca106f327d69a273489c2ed3
  project: ''
  labels:
    author: yjb
    framework: sklearn
  categories:
  - ml
  - test
spec:
  command: ''
  args: []
  image: mlrun/ml-models
  env: []
  default_handler: test_classifier
  entry_points:
    test_classifier:
      name: test_classifier
      doc: "Test one or more classifier models against held-out dataset\n\nUsing held-out\
        \ test features, evaluates the peformance of the estimated model\n\nCan be\
        \ part of a kubeflow pipeline as a test step that is run post EDA and \ntraining/validation\
        \ cycles"
      parameters:
      - name: context
        doc: the function context
      - name: models_path
        type: DataItem
        doc: artifact models representing a file or a folder
      - name: test_set
        type: DataItem
        doc: test features and labels
      - name: label_column
        type: str
        doc: column name for ground truth labels
      - name: score_method
        type: str
        doc: for multiclass classification
        default: micro
      - name: plots_dest
        type: str
        doc: dir for test plots
        default: plots
      - name: model_evaluator
        doc: 'NOT IMPLEMENTED: specific method to generate eval, passed in as string
          or available in this folder'
      - name: default_model
        type: str
        default: model.pkl
      outputs: []
      lineno: 14
  description: test a classifier using held-out or new data
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHdhcm5pbmdzCndhcm5pbmdzLnNpbXBsZWZpbHRlcihhY3Rpb249Imlnbm9yZSIsIGNhdGVnb3J5PUZ1dHVyZVdhcm5pbmcpCgppbXBvcnQgb3MKaW1wb3J0IHBhbmRhcyBhcyBwZApmcm9tIG1scnVuLmRhdGFzdG9yZSBpbXBvcnQgRGF0YUl0ZW0KZnJvbSBtbHJ1bi5hcnRpZmFjdHMgaW1wb3J0IGdldF9tb2RlbApmcm9tIG1sdXRpbHMgaW1wb3J0IGV2YWxfY2xhc3NfbW9kZWwKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgbG9hZApmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuCgpkZWYgdGVzdF9jbGFzc2lmaWVyKAogICAgY29udGV4dCwKICAgIG1vZGVsc19wYXRoOiBEYXRhSXRlbSwgCiAgICB0ZXN0X3NldDogRGF0YUl0ZW0sCiAgICBsYWJlbF9jb2x1bW46IHN0ciwKICAgIHNjb3JlX21ldGhvZDogc3RyID0gJ21pY3JvJywKICAgIHBsb3RzX2Rlc3Q6IHN0ciA9ICJwbG90cyIsCiAgICBtb2RlbF9ldmFsdWF0b3IgPSBOb25lLAogICAgZGVmYXVsdF9tb2RlbDogc3RyID0gIm1vZGVsLnBrbCIKKSAtPiBOb25lOgogICAgIiIiVGVzdCBvbmUgb3IgbW9yZSBjbGFzc2lmaWVyIG1vZGVscyBhZ2FpbnN0IGhlbGQtb3V0IGRhdGFzZXQKICAgIAogICAgVXNpbmcgaGVsZC1vdXQgdGVzdCBmZWF0dXJlcywgZXZhbHVhdGVzIHRoZSBwZWZvcm1hbmNlIG9mIHRoZSBlc3RpbWF0ZWQgbW9kZWwKICAgIAogICAgQ2FuIGJlIHBhcnQgb2YgYSBrdWJlZmxvdyBwaXBlbGluZSBhcyBhIHRlc3Qgc3RlcCB0aGF0IGlzIHJ1biBwb3N0IEVEQSBhbmQgCiAgICB0cmFpbmluZy92YWxpZGF0aW9uIGN5Y2xlcwogICAgCiAgICA6cGFyYW0gY29udGV4dDogICAgICAgICB0aGUgZnVuY3Rpb24gY29udGV4dAogICAgOnBhcmFtIG1vZGVsc19wYXRoOiAgICAgYXJ0aWZhY3QgbW9kZWxzIHJlcHJlc2VudGluZyBhIGZpbGUgb3IgYSBmb2xkZXIKICAgIDpwYXJhbSB0ZXN0X3NldDogICAgICAgIHRlc3QgZmVhdHVyZXMgYW5kIGxhYmVscwogICAgOnBhcmFtIGxhYmVsX2NvbHVtbjogICAgY29sdW1uIG5hbWUgZm9yIGdyb3VuZCB0cnV0aCBsYWJlbHMKICAgIDpwYXJhbSBzY29yZV9tZXRob2Q6ICAgIGZvciBtdWx0aWNsYXNzIGNsYXNzaWZpY2F0aW9uCiAgICA6cGFyYW0gcGxvdHNfZGVzdDogICAgICBkaXIgZm9yIHRlc3QgcGxvdHMKICAgIDpwYXJhbSBtb2RlbF9ldmFsdWF0b3I6IE5PVCBJTVBMRU1FTlRFRDogc3BlY2lmaWMgbWV0aG9kIHRvIGdlbmVyYXRlIGV2YWwsIHBhc3NlZCBpbiBhcyBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yIGF2YWlsYWJsZSBpbiB0aGlzIGZvbGRlcgogICAgIiIiCiAgICB4dGVzdCA9IHRlc3Rfc2V0LmFzX2RmKCkKICAgIHl0ZXN0ID0geHRlc3QucG9wKGxhYmVsX2NvbHVtbikKICAgIAogICAgdHJ5OgogICAgICAgIG1vZGVsX2ZpbGUsIG1vZGVsX29iaiwgXyA9IGdldF9tb2RlbChtb2RlbHNfcGF0aC51cmwsIHN1ZmZpeD0nLnBrbCcpCiAgICAgICAgbW9kZWxfb2JqID0gbG9hZChvcGVuKG1vZGVsX2ZpbGUsICJyYiIpKQogICAgZXhjZXB0IFZhbHVlRXJyb3IgYXMgdmE6IAogICAgICAgIG1vZGVsX2ZpbGUgPSBvcy5wYXRoLmpvaW4oc3RyKG1vZGVsc19wYXRoKSwgZGVmYXVsdF9tb2RlbCkKICAgICAgICBtb2RlbF9vYmogPSBsb2FkKHVybG9wZW4obW9kZWxfZmlsZSkpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGE6CiAgICAgICAgcmFpc2UgRXhjZXB0aW9uKCJtb2RlbCBsb2NhdGlvbiBsaWtlbHkgc3BlY2lmaWVkIikKICAgIAogICAgaWYgbm90IG1vZGVsX2V2YWx1YXRvcjoKICAgICAgICBldmFsX21ldHJpY3MgPSBldmFsX2NsYXNzX21vZGVsKGNvbnRleHQsIHh0ZXN0LCB5dGVzdC52YWx1ZXMsIG1vZGVsX29iaikKCiAgICBtb2RlbF9wbG90cyA9IGV2YWxfbWV0cmljcy5wb3AoInBsb3RzIikKICAgIGZvciBwbG90IGluIG1vZGVsX3Bsb3RzOgogICAgICAgIGNvbnRleHQubG9nX2FydGlmYWN0KHBsb3QsIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0ve3Bsb3Qua2V5fS5odG1sIikKICAgIAogICAgaWYgaGFzYXR0cihldmFsX21ldHJpY3MsICJ0YWJsZXMiKToKICAgICAgICBtb2RlbF90YWJsZXMgPSBldmFsX21ldHJpY3MucG9wKCJ0YWJsZXMiKQogICAgICAgIGZvciB0YmwgaW4gbW9kZWxfdGFibGVzOgogICAgICAgICAgICBjb250ZXh0LmxvZ19hcnRpZmFjdCh0YmwsIGxvY2FsX3BhdGg9ZiJ7cGxvdHNfZGVzdH0ve3Bsb3Qua2V5fS5jc3YiKQoKICAgIGNvbnRleHQubG9nX3Jlc3VsdHMoZXZhbF9tZXRyaWNzKQogICAgCiAgICB5X2hhdCA9IG1vZGVsX29iai5wcmVkaWN0KHh0ZXN0KSAjIHNob3VsZCByZXR1cm4gdGhpcyBpbiBtZXRyaWNzIHdoZXJlIGFscmVhZHkgY2FsYydlZAogICAgaWYgeV9oYXQubmRpbSA9PSAxIG9yIHlfaGF0LnNoYXBlWzFdID09IDE6CiAgICAgICAgc2NvcmVfbmFtZXMgPSBbInlzY29yZSJdCiAgICBlbHNlOgogICAgICAgIHNjb3JlX25hbWVzID0gWyJ5c2NvcmVfIiArIHN0cih4KSBmb3IgeCBpbiByYW5nZSh5X2hhdC5zaGFwZVsxXSldCgogICAgZGYgPSBwZC5jb25jYXQoW3h0ZXN0LCB5dGVzdCwgcGQuRGF0YUZyYW1lKHlfaGF0LCBjb2x1bW5zPXNjb3JlX25hbWVzKV0sIGF4aXM9MSkKICAgIGNvbnRleHQubG9nX2RhdGFzZXQoInRlc3Rfc2V0X3ByZWRzIiwgZGY9ZGYsIGZvcm1hdD0icGFycXVldCIsIGluZGV4PUZhbHNlKQoK
    commands: []
    code_origin: https://github.com/mlrun/functions.git#a483af8e000193545025613b44809fa6f308f01b:test_classifier.ipynb
