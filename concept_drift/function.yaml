kind: job
metadata:
  name: concept-drift
  tag: ''
  hash: 94e3b939c080945f55d8b7a61b6eed555b663ae7
  project: ''
  labels:
    author: orz
    framework: sklearn
  categories:
  - ml
  - serve
spec:
  command: ''
  args: []
  env: []
  default_handler: concept_drift_deployer
  entry_points:
    concept_drift_deployer:
      name: concept_drift_deployer
      doc: "    \n    \n    "
      parameters:
      - name: context
        type: MLClientCtx
      - name: base_dataset
        type: DataItem
      - name: input_stream
        type: str
      - name: output_stream
        type: str
      - name: output_tsdb
        type: str
      - name: tsdb_batch_size
        type: int
      - name: callbacks
        type: list
      - name: models
        type: list
        default:
        - ddm
        - eddm
        - pagehinkley
      - name: models_dest
        default: models
      - name: pagehinkley_threshold
        type: float
        default: 10
      - name: ddm_warning_level
        type: float
        default: 2
      - name: ddm_out_control_level
        type: float
        default: 3
      - name: label_col
        default: label
      - name: prediction_col
        default: prediction
      - name: hub_url
        type: str
        default: <_ast.Name object at 0x7f40952c07b8>
      - name: fn_tag
        type: str
        default: master
      outputs: []
      lineno: 39
  description: Deploy a streaming Concept Drift detector on a labeled stream
  build:
    functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHNrbXVsdGlmbG93LmRyaWZ0X2RldGVjdGlvbgppbXBvcnQgbnVtcHkgYXMgbnAKaW1wb3J0IHBhbmRhcyBhcyBwZAppbXBvcnQgb3MKZnJvbSBjbG91ZHBpY2tsZSBpbXBvcnQgZHVtcHMsIGxvYWQsIGR1bXAKCmZyb20gbnVjbGlvLnRyaWdnZXJzIGltcG9ydCBOdWNsaW9UcmlnZ2VyCmZyb20gbWxydW4gaW1wb3J0IERhdGFJdGVtLCBpbXBvcnRfZnVuY3Rpb24sIG1sY29uZiwgTUxDbGllbnRDdHgsIG1vdW50X3YzaW8KCmltcG9ydCByYW5kb20KCmNsYXNzIFYzSU9TdHJlYW1UcmlnZ2VyKE51Y2xpb1RyaWdnZXIpOgogICAga2luZCA9ICd2M2lvU3RyZWFtJwoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCB1cmw6IHN0ciwgc2Vla1RvOiBzdHIgPSAnZWFybGllc3QnLAogICAgICAgICAgICAgICAgIHBhcnRpdGlvbnM6IGxpc3QgPSBbMF0sIHBvbGxpbmdJbnRlcnZhbE1TOiBpbnQgPSAyNTAsCiAgICAgICAgICAgICAgICAgcmVhZEJhdGNoU2l6ZTogaW50ID0gNjQsIG1heFdvcmtlcnM6IGludCA9IDEsIAogICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBzdHIgPSBOb25lLCBwYXNzd29yZDogc3RyID0gTm9uZSk6CiAgICAgICAgc2VsZi5fc3RydWN0ID0geydraW5kJzogc2VsZi5raW5kLAogICAgICAgICAgICAgICAgICAgICAgICAndXJsJzogdXJsLAogICAgICAgICAgICAgICAgICAgICAgICAnYXR0cmlidXRlcyc6IHt9fQogICAgICAgIGlmIG1heFdvcmtlcnM6CiAgICAgICAgICAgIHNlbGYuX3N0cnVjdFsnbWF4V29ya2VycyddID0gbWF4V29ya2VycwogICAgICAgIGlmIHNlZWtUbzoKICAgICAgICAgICAgc2VsZi5fc3RydWN0WydhdHRyaWJ1dGVzJ11bJ3NlZWtUbyddID0gc2Vla1RvCiAgICAgICAgaWYgcGFydGl0aW9uczoKICAgICAgICAgICAgc2VsZi5fc3RydWN0WydhdHRyaWJ1dGVzJ11bJ3BhcnRpdGlvbnMnXSA9IHBhcnRpdGlvbnMKICAgICAgICBpZiByZWFkQmF0Y2hTaXplOgogICAgICAgICAgICBzZWxmLl9zdHJ1Y3RbJ2F0dHJpYnV0ZXMnXVsncmVhZEJhdGNoU2l6ZSddID0gcmVhZEJhdGNoU2l6ZQogICAgICAgIGlmIHBvbGxpbmdJbnRlcnZhbE1TOgogICAgICAgICAgICBzZWxmLl9zdHJ1Y3RbJ2F0dHJpYnV0ZXMnXVsncG9sbGluZ0ludGVydmFsTXMnXSA9IHBvbGxpbmdJbnRlcnZhbE1TCiAgICAgICAgdXNlciA9IHVzZXJuYW1lIGlmIHVzZXJuYW1lIGVsc2UgZW52aXJvblsnVjNJT19VU0VSTkFNRSddCiAgICAgICAgc2VsZi5fc3RydWN0Wyd1c2VybmFtZSddID0gdXNlcgogICAgICAgIGFjY2Vzc19rZXkgPSBwYXNzd29yZCBpZiBwYXNzd29yZCBlbHNlIGVudmlyb25bJ1YzSU9fQUNDRVNTX0tFWSddCiAgICAgICAgc2VsZi5fc3RydWN0WydwYXNzd29yZCddID0gYWNjZXNzX2tleQoKZGVmIGNvbmNlcHRfZHJpZnRfZGVwbG95ZXIoY29udGV4dDogTUxDbGllbnRDdHgsIGJhc2VfZGF0YXNldDpEYXRhSXRlbSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0X3N0cmVhbTpzdHIsIG91dHB1dF9zdHJlYW06c3RyLCBvdXRwdXRfdHNkYjpzdHIsIHRzZGJfYmF0Y2hfc2l6ZTppbnQsIGNhbGxiYWNrczpsaXN0LCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWxzOmxpc3Q9WydkZG0nLCAnZWRkbScsICdwYWdlaGlua2xleSddLCBtb2RlbHNfZGVzdD0nbW9kZWxzJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZWhpbmtsZXlfdGhyZXNob2xkOmZsb2F0PTEwLCBkZG1fd2FybmluZ19sZXZlbDpmbG9hdD0yLCBkZG1fb3V0X2NvbnRyb2xfbGV2ZWw6ZmxvYXQ9MywKICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxfY29sPSdsYWJlbCcsIHByZWRpY3Rpb25fY29sPSdwcmVkaWN0aW9uJywgaHViX3VybDpzdHI9bWxjb25mLmh1Yl91cmwsIGZuX3RhZzpzdHI9J21hc3RlcicpOgogICAgJycnCiAgICAKICAgIAogICAgJycnCiAgICBtbGNvbmYuZGJwYXRoID0gbWxjb25mLmRicGF0aCBvciAnaHR0cDovL21scnVuLWFwaTo4MDgwJwogICAgbWxjb25mLmh1Yl91cmwgPSBodWJfdXJsCiAgICBmbiA9IGltcG9ydF9mdW5jdGlvbih1cmw9J2h1YjovL2NvbmNlcHRfZHJpZnRfc3RyZWFtaW5nJykKICAgIAogICAgY29udGV4dC5sb2dnZXIuaW5mbygnTG9hZGluZyBiYXNlIGRhdGFzZXQnKQogICAgYmFzZV9kZiA9IGJhc2VfZGF0YXNldC5hc19kZigpCiAgICBlcnJvcl9zdHJlYW0gPSBucC53aGVyZShiYXNlX2RmW3ByZWRpY3Rpb25fY29sXS52YWx1ZXM9PWJhc2VfZGZbbGFiZWxfY29sXS52YWx1ZXMsIDAsIDEpCiAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ0NyZWF0aW5nIG1vZGVscycpCiAgICBtb2RlbHMgPSBbbW9kZWwuc3RyaXAoKSBmb3IgbW9kZWwgaW4gb3MuZ2V0ZW52KCdtb2RlbHMnLCAncGFnZWhpbmtsZXksIGRkbSwgZWRkbScpLnNwbGl0KCcsJyldCiAgICBtb2RlbHMgPSB7J2VkZG0nOiBza211bHRpZmxvdy5kcmlmdF9kZXRlY3Rpb24uRURETSgpLAogICAgICAgICAgICAgICdwYWdlaGlua2xleSc6IHNrbXVsdGlmbG93LmRyaWZ0X2RldGVjdGlvbi5QYWdlSGlua2xleShtaW5faW5zdGFuY2VzPWxlbihlcnJvcl9zdHJlYW0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQ9cGFnZWhpbmtsZXlfdGhyZXNob2xkKSwKICAgICAgICAgICAgICAnZGRtJzogc2ttdWx0aWZsb3cuZHJpZnRfZGV0ZWN0aW9uLkRETShtaW5fbnVtX2luc3RhbmNlcz1sZW4oZXJyb3Jfc3RyZWFtKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YXJuaW5nX2xldmVsPWRkbV93YXJuaW5nX2xldmVsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dF9jb250cm9sX2xldmVsPWRkbV9vdXRfY29udHJvbF9sZXZlbCl9CiAgICAKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oJ1N0cmVhbWluZyBkYXRhIHRvIG1vZGVscycpCiAgICBmb3IgaSBpbiByYW5nZShsZW4oZXJyb3Jfc3RyZWFtKSk6CiAgICAgICAgZm9yIG1vZGVsX25hbWUsIG1vZGVsIGluIG1vZGVscy5pdGVtcygpOgogICAgICAgICAgICBtb2RlbC5hZGRfZWxlbWVudChlcnJvcl9zdHJlYW1baV0pCiAgICAgICAgICAgIAogICAgY29udGV4dC5sb2dnZXIuaW5mbygnTG9nZ2luZyByZWFkeSBtb2RlbHMnKQogICAgZm9yIG5hbWUsIG1vZGVsIGluIG1vZGVscy5pdGVtcygpOgogICAgICAgIGRhdGEgPSBkdW1wcyhtb2RlbCkKICAgICAgICBtb2RlbF9maWxlID0gZid7bmFtZX0ucGtsJwogICAgICAgIGNvbnRleHQubG9nX21vZGVsKGYne25hbWV9X2NvbmNlcHRfZHJpZnQnLCBib2R5PWRhdGEsIGxhYmVscz1bJ2NvbmNlcHRfZHJpZnQnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbF9maWxlPW1vZGVsX2ZpbGUsIG1vZGVsX2Rpcj1tb2RlbHNfZGVzdCkKICAgICAgICBmbi5zZXRfZW52cyh7Zid7bmFtZX1fbW9kZWxfcGF0aCc6IG9zLnBhdGguam9pbihjb250ZXh0LmFydGlmYWN0X3BhdGgsIG1vZGVsc19kZXN0LCBtb2RlbF9maWxlKX0pCiAgICAgICAgICAgIAogICAgY29udGV4dC5sb2dnZXIuaW5mbygnRGVwbG95aW5nIENvbmNlcHQgRHJpZnQgU3RyZWFtaW5nIGZ1bmN0aW9uJykKICAgIGZuLnNldF9lbnZzKHsnbGFiZWxfY29sJzogbGFiZWxfY29sLAogICAgICAgICAgICAgICAgICdwcmVkaWN0aW9uX2NvbCc6IHByZWRpY3Rpb25fY29sLCAKICAgICAgICAgICAgICAgICAnZHJpZnRfc3RyZWFtJzogb3V0cHV0X3N0cmVhbSwKICAgICAgICAgICAgICAgICAndHNkYl90YWJsZSc6IG91dHB1dF90c2RiLAogICAgICAgICAgICAgICAgICdwYWdlaGlua2xleV90aHJlc2hvbGQnOiBwYWdlaGlua2xleV90aHJlc2hvbGQsCiAgICAgICAgICAgICAgICAgJ2RkbV93YXJuaW5nX2xldmVsJzogZGRtX3dhcm5pbmdfbGV2ZWwsCiAgICAgICAgICAgICAgICAgJ2RkbV9vdXRfY29udHJvbCc6IGRkbV9vdXRfY29udHJvbF9sZXZlbH0pICAgIAogICAgZm4uYWRkX3RyaWdnZXIoJ2xhYmVsZWRfc3RyZWFtJywgVjNJT1N0cmVhbVRyaWdnZXIodXJsPWlucHV0X3N0cmVhbSkpCiAgICBmbi5hcHBseShtb3VudF92M2lvKCkpCiAgICBmbi5kZXBsb3kocHJvamVjdD1jb250ZXh0LnByb2plY3QsIHdhdGNoPUZhbHNlKQoK
    base_image: mlrun/ml-models
    commands:
    - python -m pip install scikit-multiflow==0.4.1
    - python -m pip install v3io_frames
    code_origin: https://github.com/mlrun/functions#c60a3607cf4805a927738969a8e4730c01e803d6:concept_drift.ipynb
